#incidents-header.row-fluid
  .span5
    .control-text
      Sort by:
    .btn-group
      %button.btn.dropdown-toggle{ data: { toggle: "dropdown" } }
        = params[:filter][:sort] || "Next Court Date"
        %span.caret
      %ul.dropdown-menu
        %li
          %a{href: current_uri_with_query_params(filter: {sort: "Next Court Date"})} Next Court Date
        %li
          %a{href: current_uri_with_query_params(filter: {sort: "Next Court Part"})} Next Court Part
        %li
          %a{href: current_uri_with_query_params(filter: {sort: "Defendant Name"})} Defendant Name
        %li
          %a{href: current_uri_with_query_params(filter: {sort: "Top Charge"})} Top Charge
        %li
          %a{href: current_uri_with_query_params(filter: {sort: "Prior Criminal Convictions"})} Prior Criminal Convictions

  .span3.offset1
    .control-text= "Found #{@incidents.total_entries} #{pluralize_without_count(@incidents.total_entries, "incident")}."

  .span2
    .control-text
      %a{href: current_uri_with_query_params(format: :csv)} Export CSV

#incidents.row-fluid
  .span12
    - if @incidents.present?
      - @incidents.each do |incident|
        = haml :incident, locals: { incident: incident }
    - else
      No cases found.

#incidents-footer.row-fluid
  .span12
    - if @incidents.present?
      .info= page_entries_info @incidents
      = will_paginate @incidents, renderer: BootstrapPagination::Sinatra 
